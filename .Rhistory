devtools::use_vignette("objects-parts")
library(help = rworldmap)
library(help = rworldxtra)
library(USAboundaries)
install.packages("USAboundareis")
install.packages("USAboundaries")
library(help = USAboundaries)
?us_counties
library(USAboundaries)
?us_counties
usc <- us_counties()
library(USAboundaries)
usc <- us_counties()
set.seed(1)
usc$color <- sample(viridis(nrow(usc)))
plot(usc, col = usc$color)
library(sp)
library(viridis)
library(USAboundaries)
library(USAboundaries)
usc <- us_counties()
set.seed(1)
usc$color <- sample(viridis(nrow(usc)))
plot(usc, col = usc$color)
library(USAboundaries)
usc <- us_counties()
set.seed(1)
usc$color <- sample(viridis(nrow(usc)))
plot(usc, col = usc$color, border = NA)
usc <- spTransform(us_counties(), "+proj=albers")
library(USAboundaries)
library(viridis)
prj <- "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"
usc <- spTransform(us_counties(), prj)
set.seed(1)
usc$color <- sample(viridis(nrow(usc)))
plot(usc, col = usc$color)
usc$state_colour <- u_colours(usc$statefp)
plot(usc, col = usc$state_colour)
library(USAboundaries)
library(viridis)
n_colours <- function(n) viridis(n)
u_colours <- function(x) {f <- factor(x); n_colours(nlevels(f))[f]}
prj <- "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"
usc <- spTransform(us_counties(), prj)
set.seed(1)
usc$colour <- sample(viridis(nrow(usc)))
plot(usc, col = usc$colour)
usc$state_colour <- u_colours(usc$statefp)
plot(usc, col = usc$state_colour)
print(nrow(usc))
dusc <- disaggregate(usc)
print(nrow(usc))
print(nrow(usc))
dusc <- disaggregate(usc)
print(nrow(dusc))
plot(dusc)
class(dusc)
names(dusc)
dusc$part_colour <- u_colours(seq(nrow(dusc)))
set.seed(1)
dusc$part_colour <- sample(u_colours(seq(nrow(dusc))))
print(nrow(dusc))
plot(dusc, col = dusc$part_colour)
plot(dusc, col = dusc$part_colour, border = NA)
?rgeos::gCentroid
dim(coordinates(usc))
gCentroid(usc)
rgeos::gCentroid(usc)
dim(rgeos::gCentroid(disaggregate(usc)))
dim(rgeos::gCentroid(disaggregate(usc), byid = TRUE))
dim(rgeos::gCentroid(usc, byid = TRUE))
length(rgeos::gCentroid(usc, byid = TRUE))
length(rgeos::gCentroid(disaggregate(usc), byid = TRUE))
gUnionCascaded(usc, usc$state_colour)
rgeos::gUnionCascaded(usc, usc$state_colour)
states <- rgeos::gUnionCascaded(usc, usc$state_colour)
plot(gCentroid(states))
plot(rgeos::gCentroid(states))
plot(rgeos::gCentroid(states, byid = TRUE))
plot(states, border = "lightgrey", add = TRUE)
points(coordinates, state, pch = "x")
points(coordinates, states, pch = "x")
points(coordinates(states), pch = "x")
state_centroids_list <- lapply(split(usc, usc$statefp), function(x) coordinates(gCentroid(x)))
state_centroids <- do.call(bind_rows, state_centroids_list)
state_centroids <- SpatialPointsDataFrame(state_centroids, data.frame(statefp = names(state_centroids_list), stringsAsFactors = FALSE), proj4string = CRS(proj4string(usc)))
state_centroids_list <- lapply(split(usc, usc$statefp), function(x) coordinates(rgeos::gCentroid(x)))
state_centroids <- do.call(bind_rows, state_centroids_list)
state_centroids <- SpatialPointsDataFrame(state_centroids, data.frame(statefp = names(state_centroids_list), stringsAsFactors = FALSE), proj4string = CRS(proj4string(usc)))
state_centroids <- do.call(rbind, state_centroids_list)
state_centroids <- SpatialPointsDataFrame(state_centroids, data.frame(statefp = names(state_centroids_list), stringsAsFactors = FALSE), proj4string = CRS(proj4string(usc)))
state_centroids_list <- lapply(split(usc, usc$statefp), function(x) coordinates(rgeos::gCentroid(x)))
state_centroids <- do.call(rbind, state_centroids_list)
state_centroids <- SpatialPointsDataFrame(state_centroids, data.frame(statefp = names(state_centroids_list), stringsAsFactors = FALSE), proj4string = CRS(proj4string(usc)),
match.ID = FALSE)
state_centroids <- do.call(rbind, state_centroids_list)
row.names(state_centroids)
row.names(state_centroids) <- NULL
state_centroids <- SpatialPointsDataFrame(state_centroids, data.frame(statefp = names(state_centroids_list), stringsAsFactors = FALSE), proj4string = CRS(proj4string(usc)),
match.ID = FALSE)
plot(state_centroids)
text(state_centroids, state_centroids$statefp)
?raster::union
names(usc)
state_centroids_list <- lapply(split(usc, usc$state_name), function(x) coordinates(rgeos::gCentroid(x)))
state_centroids <- do.call(rbind, state_centroids_list)
row.names(state_centroids) <- NULL
state_centroids <- SpatialPointsDataFrame(state_centroids, data.frame(state_name = names(state_centroids_list), stringsAsFactors = FALSE), proj4string = CRS(proj4string(usc)),
match.ID = FALSE)
plot(state_centroids)
text(state_centroids, lab = state_centroids$state_name)
?ls()
library(rangl)
state_counties <- rangl(usc)
plot(state_counties)
library(spbabel)
state_counties <- map_table(usc)
print(state_counties)
library(USAboundaries)
library(viridis)
n_colours <- function(n) viridis(n)
u_colours <- function(x) {f <- factor(x); n_colours(nlevels(f))[f]}
prj <- "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"
usc <- spTransform(us_counties(), prj)
set.seed(1)
usc$colour <- sample(viridis(nrow(usc)))
par(mar = rep(0, 4))
plot(usc, col = usc$colour)
rgdal::writeOGR(usc, ".", "usc", "MapInfo File")
rgdal::writeOGR(usc, ".", "usc", "ESRI Shapefile")
getwd()
staticdos::build_site()
staticdocs::build_site()
staticdocs::build_site()
staticdocs::build_site()
staticdocs::build_site()
staticdocs::build_site()
# Chunk 1: setup
library(sp)
library(rgdal)
library(viridis)
library(USAboundaries)
par(mar = rep(0, 4))
# Chunk 2
library(USAboundaries)
library(viridis)
n_colours <- function(n) viridis(n)
u_colours <- function(x) {f <- factor(x); n_colours(nlevels(f))[f]}
prj <- "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"
usc <- spTransform(us_counties(), prj)
set.seed(1)
usc$colour <- sample(viridis(nrow(usc)))
par(mar = rep(0, 4))
plot(usc, col = usc$colour)
# Chunk 3
usc$state_colour <- u_colours(usc$state_name)
plot(usc, col = usc$state_colour)
# Chunk 4
print(nrow(usc))
dusc <- disaggregate(usc)
set.seed(1)
dusc$part_colour <- sample(u_colours(seq(nrow(dusc))))
print(nrow(dusc))
plot(dusc, col = dusc$part_colour, border = NA)
# Chunk 5
dim(coordinates(usc))
rgeos::gCentroid(usc)
# Chunk 6
length(rgeos::gCentroid(usc, byid = TRUE))
# Chunk 7
length(rgeos::gCentroid(disaggregate(usc), byid = TRUE))
# Chunk 8
states <- rgeos::gUnionCascaded(usc, usc$state_name)
plot(rgeos::gCentroid(states, byid = TRUE))
plot(states, border = "lightgrey", add = TRUE)
## notice how coordinates and gcentroid are slightly different
# points(coordinates(states), pch = "x")
# Chunk 9
state_centroids_list <- lapply(split(usc, usc$state_name), function(x) coordinates(rgeos::gCentroid(x)))
state_centroids <- do.call(rbind, state_centroids_list)
row.names(state_centroids) <- NULL
state_centroids <- SpatialPointsDataFrame(state_centroids, data.frame(state_name = names(state_centroids_list), stringsAsFactors = FALSE), proj4string = CRS(proj4string(usc)),
match.ID = FALSE)
plot(state_centroids)
text(state_centroids, lab = state_centroids$state_name, cex = 0.7)
library(spbabel) ## use sptable (could also use ggplot2::fortify)
sptable(usc) %>% group_by(state_name) %>% mutate(centroidX = mean(x_), centroidY = mean(y_))
library(spbabel) ## use sptable (could also use ggplot2::fortify)
library(dplyr)
sptable(usc) %>% group_by(state_name) %>% mutate(centroidX = mean(x_), centroidY = mean(y_))
names(usc)
usc$object_ <- seq(nrow(usc))
sptable(usc) %>% group_by(object_) %>% mutate(centroidX = mean(x_), centroidY = mean(y_))  %>% inner_join(as.data.frame(usc))
library(spbabel) ## use sptable (could also use ggplot2::fortify)
library(dplyr)
usc$object_ <- seq(nrow(usc))
sptable(usc) %>% group_by(object_) %>% summarize(centroidX = mean(x_), centroidY = mean(y_))  %>% inner_join(as.data.frame(usc))
library(spbabel) ## use sptable (could also use ggplot2::fortify)
library(dplyr)
usc$object_ <- seq(nrow(usc))
sptable(usc) %>% group_by(object_) %>% summarize(centroidX = mean(x_), centroidY = mean(y_))  %>% inner_join(as.data.frame(usc[, c("object_", "state_name")]))
library(spbabel) ## use sptable (could also use ggplot2::fortify)
library(dplyr)
usc$object_ <- seq(nrow(usc))
state_centroids2 <- sptable(usc) %>% group_by(object_) %>% summarize(centroidX = mean(x_), centroidY = mean(y_))  %>% inner_join(as.data.frame(usc[, c("object_", "state_name")]))
library(spbabel) ## use sptable (could also use ggplot2::fortify)
library(dplyr)
usc$object_ <- seq(nrow(usc))
state_centroids2 <- sptable(usc) %>% group_by(object_) %>% summarize(centroidX = mean(x_), centroidY = mean(y_))  %>% inner_join(as.data.frame(usc[, c("object_", "state_name")]))
library(ggplot2)
ggplot(state_centroids2) + aes(x = centroidX, y = centroidY) + geom_label(state_name)
state_centroids2
?geom_label
ggplot(state_centroids2) + aes(x = centroidX, y = centroidY) + geom_text(state_name)
ggplot(state_centroids2) + aes(x = centroidX, y = centroidY, label = state_name) + geom_point()
ggplot(state_centroids2) + aes(x = centroidX, y = centroidY, label = state_name) + geom_text()
state_centroids2 <- sptable(usc) %>%  inner_join(as.data.frame(usc[, c("object_", "state_name")])) %>% group_by(state_name) %>% summarize(centroidX = mean(x_), centroidY = mean(y_))
library(ggplot2)
ggplot(state_centroids2) + aes(x = centroidX, y = centroidY, label = state_name) + geom_text()
library(oddhack)
